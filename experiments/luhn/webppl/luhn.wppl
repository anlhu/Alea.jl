

var gen = function(n, count) { 
  if(count <= 0) { 
    return [];
  }
  else {
    return [randomInteger(n)].concat(gen(n, count-1));
  }
}


var cond_observe = function(x, obs) {
  if (flip(1/2)) {
    condition(x==obs);
    return 0;
  }
  else {
    return 0;
  }
}


var compute_sum = function(nums, double) {
  if (nums.length == 0) {
    return 0;
  }
  else {
    var cur = nums[0];
    return double ? (cur > 4 ? 2*cur - 9 : 2*cur) + compute_sum(nums.slice(1), false)
    : cur + compute_sum(nums.slice(1), true);
  }
}

var do_cond_observes = function(ps, obs) {
  if (ps.length == 0) {
    return 0;
  }
  else {
    cond_observe(ps[0], obs[0]);
    return do_cond_observes(ps.slice(1), obs.slice(1));
  }
}
var main = function(){
  var n = argv["n"];
  var full_id = [2, 0, 5, 6, 0, 6, 7, 1, 7, 8];
  var id = full_id.slice(0, n);

  var ps = gen(10, n);
  
  do_cond_observes(ps, id);
  
  var post_sum = compute_sum(ps.slice(1), true);
  condition(10-(post_sum % 10) == id[0]);
  return ps[0];
};
timeit(function(){Infer({method:'enumerate',model:main}).getDist(0)}).runtimeInMilliseconds
